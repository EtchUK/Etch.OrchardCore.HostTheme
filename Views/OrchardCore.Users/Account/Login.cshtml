@using Microsoft.AspNetCore.Identity
@using OrchardCore.Entities
@using OrchardCore.Settings
@using OrchardCore.Themes.Services
@using OrchardCore.Users
@using OrchardCore.Users.Models

@model OrchardCore.Users.ViewModels.LoginViewModel

@inject ISiteThemeService SiteThemeService
@inject SignInManager<IUser> _signInManager
@inject ISiteService _site

@{
    var userCanRegister = (await _site.GetSiteSettingsAsync()).As<RegistrationSettings>().UsersCanRegister;
    var allowResetPassword = (await _site.GetSiteSettingsAsync()).As<ResetPasswordSettings>().AllowResetPassword;
    var loginProviders = (await _signInManager.GetExternalAuthenticationSchemesAsync()).ToList();

    var returnUrl = Context.Request.Query.ContainsKey("returnUrl") ? (string)Context.Request.Query["returnUrl"] : string.Empty;
    var title = returnUrl.ToLower().EndsWith("admin") ? T["Admin Area"] : T["Exhibitor Area"];

    RenderTitleSegments(title);

    var currentThemeName = await SiteThemeService.GetCurrentThemeNameAsync();
}

<section class="section section--form-solo">
    <div class="section__content">
        <img src="/@currentThemeName/content/logo-play.svg" class="margin--bottom-large" />

        <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" class="form card js-form" method="POST">
            <div class="card__body">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="form-group">
                        <p class="text--danger">Failed to login.</p>
                    </div>
                }

                <div class="form-group">
                    <label class="label" for="UserName">
                        @T["Username"]
                    </label>
                    <input class="input" id="UserName" name="UserName" type="text" autofocus tabindex="1">
                </div>

                <div class="form-group">
                    <label class="label" for="Password">
                        @T["Password"]
                    </label>
                    <input class="input" id="Password" name="Password" type="password" tabindex="2">
                </div>

                @await RenderSectionAsync("AfterLogin", required: false)

                <button type="submit" class="btn btn--primary btn--full-width" tabindex="3" disabled>@T["Login"]</button>
            </div>
        </form>

        @if (allowResetPassword)
        {
            <p><a asp-controller="ResetPassword" asp-action="ForgotPassword" asp-area="OrchardCore.Users" class="link link--plain">@T["Forgot password?"]</a></p>
        }
    </div>
</section>